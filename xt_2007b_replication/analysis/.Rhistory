# (l1$sub1_a == 0 | l1$sub2_a == 0 | l1$sub1_b == 0 | l1$sub2_b == 0)
sub <- l1$basic1_a == 0 & l1$basic2_a == 0 &
l1$basic1_b == 0 & l1$basic2_b == 0 &
(l1$sub1_a == 1 & l1$sub2_a == 1 & l1$sub1_b == 1 & l1$sub2_b == 1)
basic <- (l1$basic1_a == 1 | l1$basic2_a == 1 |
l1$basic1_b == 1 | l1$basic2_b == 1) &
(l1$sub1_a == 1 & l1$sub2_a == 1 & l1$sub1_b == 1 & l1$sub2_b == 1)
l1$ans.cat <- "other"
#l1$ans.cat[proper] <- "proper"
l1$ans.cat[sub] <- "sub"
l1$ans.cat[basic] <- "basic"
l1$ans.cat <- factor(l1$ans.cat,c("proper","sub","basic","other"))
l1 = l1[l1$ans.cat != "other",]
# get proportions and bootstrapped CIS
M3 <- data.frame()
for (k in 1:length(levels(l1$ans.cat))){
M3 = rbind(M3, ddply(l1, .(sample),
function (d) {getPs(d$ans.cat, levels(d$ans.cat)[k])}))
}
M3$exp = "In Lab"
```
Plot.
```{r, echo=F}
# plot
ggplot(data=M3[M3$dv == "basic" | M3$dv == "sub",], aes(x=factor(dv), y=p, fill=sample)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_linerange(aes(ymin=ciwl,ymax=ciul), position=position_dodge(.9)) +
ylim(0,1) +
ylab("Prop. participants showing \ngeneralization pattern") +
xlab("Generalization pattern") +
ggtitle("In Lab Replication") +
theme(text = element_text(size=18),
plot.title=element_text(size=20, face = "bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'),
# legend.position=c(.85,.8),
panel.background = element_rect(fill = 'white', colour = 'white')) +
scale_fill_discrete(name="Sampling\nCondition")
```
```{r}
l1 <- read.csv("../data/inlab_replication.csv")
#proper <- l1$basic1_a == 0 & l1$basic2_a == 0 &
# l1$basic1_b == 0 & l1$basic2_b == 0 &
# (l1$sub1_a == 0 | l1$sub2_a == 0 | l1$sub1_b == 0 | l1$sub2_b == 0)
sub <- l1$basic1_a == 0 & l1$basic2_a == 0 &
l1$basic1_b == 0 & l1$basic2_b == 0 &
(l1$sub1_a == 1 & l1$sub2_a == 1 & l1$sub1_b == 1 & l1$sub2_b == 1)
basic <- (l1$basic1_a == 1 | l1$basic2_a == 1 |
l1$basic1_b == 1 | l1$basic2_b == 1) &
(l1$sub1_a == 1 & l1$sub2_a == 1 & l1$sub1_b == 1 & l1$sub2_b == 1)
l1$ans.cat <- "other"
#l1$ans.cat[proper] <- "proper"
l1$ans.cat[sub] <- "sub"
l1$ans.cat[basic] <- "basic"
l1$ans.cat <- factor(l1$ans.cat,c("proper","sub","basic","other"))
l1 = l1[l1$ans.cat != "other",]
# get proportions and bootstrapped CIS
M3 <- data.frame()
for (k in 1:length(levels(l1$ans.cat))){
M3 = rbind(M3, ddply(l1, .(sample),
function (d) {getPs(d$ans.cat, levels(d$ans.cat)[k])}))
}
M3$exp = "In Lab"
```
Plot.
```{r, echo=F}
# plot
ggplot(data=M3[M3$dv == "basic" | M3$dv == "sub",], aes(x=factor(dv), y=p, fill=Sampling\nCondition)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_linerange(aes(ymin=ciwl,ymax=ciul), position=position_dodge(.9)) +
ylim(0,1) +
ylab("Prop. participants showing \ngeneralization pattern") +
xlab("Generalization pattern") +
ggtitle("In Lab Replication") +
theme(text = element_text(size=18),
plot.title=element_text(size=20, face = "bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'),
# legend.position=c(.85,.8),
panel.background = element_rect(fill = 'white', colour = 'white')) +
scale_fill_discrete(name="Sampling\nCondition")
```
Stats
No difference.
```{r}
l1_counts= table(l1$ans.cat, l1$sample)[2:3,]
chisq.test(l1_counts)
```
```{r}
l1 <- read.csv("../data/inlab_replication.csv")
#proper <- l1$basic1_a == 0 & l1$basic2_a == 0 &
# l1$basic1_b == 0 & l1$basic2_b == 0 &
# (l1$sub1_a == 0 | l1$sub2_a == 0 | l1$sub1_b == 0 | l1$sub2_b == 0)
sub <- l1$basic1_a == 0 & l1$basic2_a == 0 &
l1$basic1_b == 0 & l1$basic2_b == 0 &
(l1$sub1_a == 1 & l1$sub2_a == 1 & l1$sub1_b == 1 & l1$sub2_b == 1)
basic <- (l1$basic1_a == 1 | l1$basic2_a == 1 |
l1$basic1_b == 1 | l1$basic2_b == 1) &
(l1$sub1_a == 1 & l1$sub2_a == 1 & l1$sub1_b == 1 & l1$sub2_b == 1)
l1$ans.cat <- "other"
#l1$ans.cat[proper] <- "proper"
l1$ans.cat[sub] <- "sub"
l1$ans.cat[basic] <- "basic"
l1$ans.cat <- factor(l1$ans.cat,c("proper","sub","basic","other"))
l1 = l1[l1$ans.cat != "other",]
# get proportions and bootstrapped CIS
M3 <- data.frame()
for (k in 1:length(levels(l1$ans.cat))){
M3 = rbind(M3, ddply(l1, .(sample),
function (d) {getPs(d$ans.cat, levels(d$ans.cat)[k])}))
}
M3$exp = "In Lab"
```
Plot.
```{r, echo=F}
# plot
ggplot(data=M3[M3$dv == "basic" | M3$dv == "sub",], aes(x=factor(dv), y=p, fill=sample) +
geom_bar(stat="identity", position=position_dodge()) +
geom_linerange(aes(ymin=ciwl,ymax=ciul), position=position_dodge(.9)) +
ylim(0,1) +
ylab("Prop. participants showing \ngeneralization pattern") +
xlab("Generalization pattern") +
ggtitle("In Lab Replication") +
theme(text = element_text(size=18),
plot.title=element_text(size=20, face = "bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'),
# legend.position=c(.85,.8),
panel.background = element_rect(fill = 'white', colour = 'white')) +
scale_fill_discrete(name="Sampling\nCondition",
labels=c("teacher", "learner"))
```
Stats
No difference.
```{r}
l1_counts= table(l1$ans.cat, l1$sample)[2:3,]
chisq.test(l1_counts)
```
```{r}
l1 <- read.csv("../data/inlab_replication.csv")
#proper <- l1$basic1_a == 0 & l1$basic2_a == 0 &
# l1$basic1_b == 0 & l1$basic2_b == 0 &
# (l1$sub1_a == 0 | l1$sub2_a == 0 | l1$sub1_b == 0 | l1$sub2_b == 0)
sub <- l1$basic1_a == 0 & l1$basic2_a == 0 &
l1$basic1_b == 0 & l1$basic2_b == 0 &
(l1$sub1_a == 1 & l1$sub2_a == 1 & l1$sub1_b == 1 & l1$sub2_b == 1)
basic <- (l1$basic1_a == 1 | l1$basic2_a == 1 |
l1$basic1_b == 1 | l1$basic2_b == 1) &
(l1$sub1_a == 1 & l1$sub2_a == 1 & l1$sub1_b == 1 & l1$sub2_b == 1)
l1$ans.cat <- "other"
#l1$ans.cat[proper] <- "proper"
l1$ans.cat[sub] <- "sub"
l1$ans.cat[basic] <- "basic"
l1$ans.cat <- factor(l1$ans.cat,c("proper","sub","basic","other"))
l1 = l1[l1$ans.cat != "other",]
# get proportions and bootstrapped CIS
M3 <- data.frame()
for (k in 1:length(levels(l1$ans.cat))){
M3 = rbind(M3, ddply(l1, .(sample),
function (d) {getPs(d$ans.cat, levels(d$ans.cat)[k])}))
}
M3$exp = "In Lab"
```
Plot.
```{r, echo=F}
# plot
ggplot(data=M3[M3$dv == "basic" | M3$dv == "sub",], aes(x=factor(dv), y=p, fill=sample) +
geom_bar(stat="identity", position=position_dodge()) +
geom_linerange(aes(ymin=ciwl,ymax=ciul), position=position_dodge(.9)) +
ylim(0,1) +
ylab("Prop. participants showing \ngeneralization pattern") +
xlab("Generalization pattern") +
ggtitle("In Lab Replication") +
theme(text = element_text(size=18),
plot.title=element_text(size=20, face = "bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'),
# legend.position=c(.85,.8),
panel.background = element_rect(fill = 'white', colour = 'white')) +
scale_fill_discrete(name="Sampling\nCondition")
```
summary (d3)
Filter.
```{r}
# subset data
d2 <- subset(d2, Answer.click1 == "\"correct\"" & Answer.click2 == "\"correct\"") # take out those who click on wrong training items
d2 <- subset(d2, Answer.Qcheck1 == 0 & Answer.Qcheck2 == 0) # take out if missed check generalization question
d2 <- subset(d2, Answer.question1 == 'true' & Answer.question2 =='true' &
Answer.question3 == 'true' & Answer.question4=='true' ) # take out those who missed filter question
```
summary(d2)
summary (d3)
summary (d2)
```{r}
# subset data
d2 <- subset(d2, Answer.click1 == "\"correct\"" & Answer.click2 == "\"correct\"") # take out those who click on wrong training items
d2 <- subset(d2, Answer.Qcheck1 == 0 & Answer.Qcheck2 == 0) # take out if missed check generalization question
d2 <- subset(d2, Answer.question1 == 'true' & Answer.question2 =='true' &
Answer.question3 == 'true' & Answer.question4=='true' ) # take out those who missed filter question
```
Filter.
```{r}
# subset data
d2 <- subset(d2, Answer.click1 == "\"correct\"" & Answer.click2 == "\"correct\"") # take out those who click on wrong training items
d2 <- subset(d2, Answer.Qcheck1 == 0 & Answer.Qcheck2 == 0) # take out if missed check generalization question
d2 <- subset(d2, Answer.question1 == 'true' & Answer.question2 =='true' &
Answer.question3 == 'true' & Answer.question4=='true' ) # take out those who missed filter question
```
```{r, echo = F, warning = F, include = F}
rm(list = ls())
#--Load packages--
library(knitr)
opts_chunk$set(cache = F, warning = F, message = F)
library(boot)
library(ggplot2)
library(plyr)
#source("/Documents/GRADUATE_SCHOOL/Ranalysis/useful.R")
getPs <- function(d, dv){
# get proportions
prop = sum(d==dv)/length(d)
# bootstrap across subject proportion responses for each category
b <- boot(d, function(u, i) table(u[i])[dv]/length(u), R = 1000)
ci <- boot.ci(b, type = "perc")
ciwl = ci$percent[4]
ciwu = ci$percent[5]
es <- data.frame(p = prop,
ciwl = ciwl,
ciul = ciwu,
dv = dv)
return (es)
}
d.fc <- function(response, cond) {
# http://www.meta-analysis.com/downloads/Meta-analysis%20Converting%20among%20effect%20sizes.pdf
#https://www.medcalc.net/tests/odds_ratio.php
response = droplevels(response)
response<- ordered(response, levels = c( "basic", "sub"))
cond <- ordered(cond, levels = c( "learner", "teacher"))
#use odds ratioto calculate d
ns = table(cond, response)
or = (ns[1]*ns[4])/(ns[2]*ns[3])
cf = sqrt(3)/pi
effect_size = log(or) * cf #calculate d
#effect_size = log(or)  #calculate d
# caluclate 95 CI
se = sqrt((1/ns[1]) + (1/ns[2]) + (1/ns[3]) + (1/ns[4])) # calculate se of log odds ratio
d_se = se * (3/(pi^2)) # caclulate se of
d_err = d_se*1.96
#d_err = se*1.96
cill = effect_size - d_err
ciul = effect_size + d_err
es <- data.frame(effect_size=effect_size,
cill = cill,
ciul = ciul
)
return (es)
}
```
<a name="t3"/>
<h3> Turk Replication #3 </h3>
Read in data and pre-process
```{r, echo = F}
d3 <- read.csv("../data/turk_replication_2.csv")
# make factors
d3$Answer.sample <- factor(d3$Answer.sample, labels=c('teacher','learner')) # sample0 = teacher, sample1=learner
d3$Answer.Qcheck1 <- factor(d3$Answer.Qcheck1)
d3$Answer.Qcheck2 <- factor(d3$Answer.Qcheck2)
d3$Answer.Qsub1 <- factor(d3$Answer.Qsub1)
d3$Answer.Qsub2 <- factor(d3$Answer.Qsub2)
d3$Answer.Qbasic1 <- factor(d3$Answer.Qbasic1)
d3$Answer.Qbasic2 <- factor(d3$Answer.Qbasic2)
d3$Answer.Qbasic3 <- factor(d3$Answer.Qbasic3)
d3$Answer.Qproper1 <- factor(d3$Answer.Qproper1)
d3$Answer.Qproper2 <- factor(d3$Answer.Qproper2)
d3$Answer.Qproper3 <- factor(d3$Answer.Qproper3)
```
Filter.
```{r}
# subset data
d3 <- subset(d3, Answer.click1 == "\"correct\"" & Answer.click2 == "\"correct\"") # take out those who click on wrong training items # 18 learner condition clicked on wrong object
d3 <- subset(d3, Answer.Qcheck1 == 0 & Answer.Qcheck2 == 0) # take out if missed check generalization question #1 participant generalization to other category
d3 <- subset(d3, Answer.question1 == 'true' & Answer.question2 =='true' &
Answer.question3 == 'true' & Answer.question4=='true' ) # take out those who missed filter question # 2 participants missed filter question
```
Categorize response patterns based on criterion.
```{r}
criterion = "unstrictnew"
numsubj = dim(d3)[1]
if (criterion == "unstrictold"){
proper <- (d3$Answer.Qproper1 == 1 & d3$Answer.Qproper2 == 1 &
d3$Answer.Qproper3 == 1) & d3$Answer.Qsub1 == 0 &
d3$Answer.Qsub2 == 0 & d3$Answer.Qbasic1 == 0 &
d3$Answer.Qbasic2 == 0 & d3$Answer.Qbasic3 == 0
sub <- 	d3$Answer.Qproper1 == 1 & d3$Answer.Qproper2 == 1 &
d3$Answer.Qproper3 == 1 & d3$Answer.Qsub1 == 1 &
d3$Answer.Qsub2 == 1 & d3$Answer.Qbasic1 == 0 &
d3$Answer.Qbasic2 == 0 & d3$Answer.Qbasic3 == 0
basic <- d3$Answer.Qproper1 == 1 & d3$Answer.Qproper2 == 1 &
d3$Answer.Qproper3 == 1 & d3$Answer.Qsub1 == 1 &
d3$Answer.Qsub2 == 1 & d3$Answer.Qbasic1 == 1 &
d3$Answer.Qbasic2 == 1 & d3$Answer.Qbasic3 == 1
} else if (criterion == "unstrictnew") {
proper <- (d3$Answer.Qproper1 == 1 & d3$Answer.Qproper2 == 1 &
d3$Answer.Qproper3 == 1) & (d3$Answer.Qsub1 == 0 |
d3$Answer.Qsub2 == 0) & d3$Answer.Qbasic1 == 0 &
d3$Answer.Qbasic2 == 0 & d3$Answer.Qbasic3 == 0
sub <- 	d3$Answer.Qproper1 == 1 & d3$Answer.Qproper2 == 1 &
d3$Answer.Qproper3 == 1 & d3$Answer.Qsub1 == 1 &
d3$Answer.Qsub2 == 1 & d3$Answer.Qbasic1 == 0 &
d3$Answer.Qbasic2 == 0 & d3$Answer.Qbasic3 == 0
basic <- d3$Answer.Qproper1 == 1 & d3$Answer.Qproper2 == 1 &
d3$Answer.Qproper3 == 1 & d3$Answer.Qsub1 == 1 &
d3$Answer.Qsub2 == 1 & (d3$Answer.Qbasic1 == 1 |
d3$Answer.Qbasic2 == 1 | d3$Answer.Qbasic3 == 1)
}
d3$w.ans.cat <- "other"
d3$w.ans.cat[proper] <- "proper"
d3$w.ans.cat[sub] <- "sub"
d3$w.ans.cat[basic] <- "basic"
d3$w.ans.cat <- factor(d3$w.ans.cat,c("proper","sub","basic","other"))
d3 = d3[d3$w.ans.cat != "other",]
# get proportions and bootstrapped CIS
M2 <- data.frame()
for (k in 1:length(levels(d3$w.ans.cat))){
M2 = rbind(M2, ddply(d3, .(Answer.sample),
function (d) {getPs(d$w.ans.cat, levels(d$w.ans.cat)[k])}))
}
M2$exp = "Turk #3"
```
Plot.
```{r, echo=F}
# plot
ggplot(data=M2, aes(x=factor(dv), y=p, fill=Answer.sample)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_linerange(aes(ymin=ciwl,ymax=ciul), position=position_dodge(.9)) +
ylim(0,1) +
ylab("Prop. participants showing \ngeneralization pattern") +
xlab("Generalization pattern") +
ggtitle("Turk Replication #3") +
theme(text = element_text(size=18),
plot.title=element_text(size=20, face = "bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'),
legend.position=c(.85,.8),
panel.background = element_rect(fill = 'white', colour = 'white')) +
scale_fill_discrete(name="Sampling\nCondition")
```
Stats
```{r}
d3_counts= table(d3$w.ans.cat, d3$Answer.sample)[2:3,]
chisq.test(d3_counts)
```
```{r, echo = F, warning = F, include = F}
rm(list = ls())
#--Load packages--
library(knitr)
opts_chunk$set(cache = F, warning = F, message = F)
library(boot)
library(ggplot2)
library(plyr)
#source("/Documents/GRADUATE_SCHOOL/Ranalysis/useful.R")
getPs <- function(d, dv){
# get proportions
prop = sum(d==dv)/length(d)
# bootstrap across subject proportion responses for each category
b <- boot(d, function(u, i) table(u[i])[dv]/length(u), R = 1000)
ci <- boot.ci(b, type = "perc")
ciwl = ci$percent[4]
ciwu = ci$percent[5]
es <- data.frame(p = prop,
ciwl = ciwl,
ciul = ciwu,
dv = dv)
return (es)
}
d.fc <- function(response, cond) {
# http://www.meta-analysis.com/downloads/Meta-analysis%20Converting%20among%20effect%20sizes.pdf
#https://www.medcalc.net/tests/odds_ratio.php
response = droplevels(response)
response<- ordered(response, levels = c( "basic", "sub"))
cond <- ordered(cond, levels = c( "learner", "teacher"))
#use odds ratioto calculate d
ns = table(cond, response)
or = (ns[1]*ns[4])/(ns[2]*ns[3])
cf = sqrt(3)/pi
effect_size = log(or) * cf #calculate d
#effect_size = log(or)  #calculate d
# caluclate 95 CI
se = sqrt((1/ns[1]) + (1/ns[2]) + (1/ns[3]) + (1/ns[4])) # calculate se of log odds ratio
d_se = se * (3/(pi^2)) # caclulate se of
d_err = d_se*1.96
#d_err = se*1.96
cill = effect_size - d_err
ciul = effect_size + d_err
es <- data.frame(effect_size=effect_size,
cill = cill,
ciul = ciul
)
return (es)
}
```
<a name="t3"/>
<h3> Turk Replication #3 </h3>
Read in data and pre-process
```{r, echo = F}
d3 <- read.csv("../data/turk_replication_2.csv")
# make factors
d3$Answer.sample <- factor(d3$Answer.sample, labels=c('teacher','learner')) # sample0 = teacher, sample1=learner
d3$Answer.Qcheck1 <- factor(d3$Answer.Qcheck1)
d3$Answer.Qcheck2 <- factor(d3$Answer.Qcheck2)
d3$Answer.Qsub1 <- factor(d3$Answer.Qsub1)
d3$Answer.Qsub2 <- factor(d3$Answer.Qsub2)
d3$Answer.Qbasic1 <- factor(d3$Answer.Qbasic1)
d3$Answer.Qbasic2 <- factor(d3$Answer.Qbasic2)
d3$Answer.Qbasic3 <- factor(d3$Answer.Qbasic3)
d3$Answer.Qproper1 <- factor(d3$Answer.Qproper1)
d3$Answer.Qproper2 <- factor(d3$Answer.Qproper2)
d3$Answer.Qproper3 <- factor(d3$Answer.Qproper3)
```
Filter.
```{r}
# subset data
d3 <- subset(d3, Answer.click1 == "\"correct\"" & Answer.click2 == "\"correct\"") # take out those who click on wrong training items # 18 learner condition clicked on wrong object
d3 <- subset(d3, Answer.Qcheck1 == 0 & Answer.Qcheck2 == 0) # take out if missed check generalization question #1 participant generalization to other category
d3 <- subset(d3, Answer.question1 == 'true' & Answer.question2 =='true' &
Answer.question3 == 'true' & Answer.question4=='true' ) # take out those who missed filter question # 2 participants missed filter question
```
Categorize response patterns based on criterion.
```{r}
criterion = "unstrictnew"
numsubj = dim(d3)[1]
if (criterion == "unstrictold"){
proper <- (d3$Answer.Qproper1 == 1 & d3$Answer.Qproper2 == 1 &
d3$Answer.Qproper3 == 1) & d3$Answer.Qsub1 == 0 &
d3$Answer.Qsub2 == 0 & d3$Answer.Qbasic1 == 0 &
d3$Answer.Qbasic2 == 0 & d3$Answer.Qbasic3 == 0
sub <- 	d3$Answer.Qproper1 == 1 & d3$Answer.Qproper2 == 1 &
d3$Answer.Qproper3 == 1 & d3$Answer.Qsub1 == 1 &
d3$Answer.Qsub2 == 1 & d3$Answer.Qbasic1 == 0 &
d3$Answer.Qbasic2 == 0 & d3$Answer.Qbasic3 == 0
basic <- d3$Answer.Qproper1 == 1 & d3$Answer.Qproper2 == 1 &
d3$Answer.Qproper3 == 1 & d3$Answer.Qsub1 == 1 &
d3$Answer.Qsub2 == 1 & d3$Answer.Qbasic1 == 1 &
d3$Answer.Qbasic2 == 1 & d3$Answer.Qbasic3 == 1
} else if (criterion == "unstrictnew") {
proper <- (d3$Answer.Qproper1 == 1 & d3$Answer.Qproper2 == 1 &
d3$Answer.Qproper3 == 1) & (d3$Answer.Qsub1 == 0 |
d3$Answer.Qsub2 == 0) & d3$Answer.Qbasic1 == 0 &
d3$Answer.Qbasic2 == 0 & d3$Answer.Qbasic3 == 0
sub <- 	d3$Answer.Qproper1 == 1 & d3$Answer.Qproper2 == 1 &
d3$Answer.Qproper3 == 1 & d3$Answer.Qsub1 == 1 &
d3$Answer.Qsub2 == 1 & d3$Answer.Qbasic1 == 0 &
d3$Answer.Qbasic2 == 0 & d3$Answer.Qbasic3 == 0
basic <- d3$Answer.Qproper1 == 1 & d3$Answer.Qproper2 == 1 &
d3$Answer.Qproper3 == 1 & d3$Answer.Qsub1 == 1 &
d3$Answer.Qsub2 == 1 & (d3$Answer.Qbasic1 == 1 |
d3$Answer.Qbasic2 == 1 | d3$Answer.Qbasic3 == 1)
}
d3$w.ans.cat <- "other"
d3$w.ans.cat[proper] <- "proper"
d3$w.ans.cat[sub] <- "sub"
d3$w.ans.cat[basic] <- "basic"
d3$w.ans.cat <- factor(d3$w.ans.cat,c("proper","sub","basic","other"))
d3 = d3[d3$w.ans.cat != "other",]
# get proportions and bootstrapped CIS
M2 <- data.frame()
for (k in 1:length(levels(d3$w.ans.cat))){
M2 = rbind(M2, ddply(d3, .(Answer.sample),
function (d) {getPs(d$w.ans.cat, levels(d$w.ans.cat)[k])}))
}
M2$exp = "Turk #3"
```
Plot.
```{r, echo=F}
# plot
ggplot(data=M2, aes(x=factor(dv), y=p, fill=Answer.sample)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_linerange(aes(ymin=ciwl,ymax=ciul), position=position_dodge(.9)) +
ylim(0,1) +
ylab("Prop. participants showing \ngeneralization pattern") +
xlab("Generalization pattern") +
ggtitle("Turk Replication #3") +
theme(text = element_text(size=18),
plot.title=element_text(size=20, face = "bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'),
legend.position=c(.85,.8),
panel.background = element_rect(fill = 'white', colour = 'white')) +
scale_fill_discrete(name="Sampling\nCondition")
```
Stats
```{r}
d3_counts= table(d3$w.ans.cat, d3$Answer.sample)[2:3,]
chisq.test(d3_counts)
```
